#include <stdio.h>
#include <string.h>

int longestPalindrome(char *str) {
    int n = strlen(str);
    int dp[n][n];
    
    // Initialize the diagonal elements
    for (int i = 0; i < n; i++) {
        dp[i][i] = 1;
    }
    
    // Fill the upper half of the matrix
    for (int len = 2; len <= n; len++) {
        for (int i = 0; i < n - len + 1; i++) {
            int j = i + len - 1;
            if (str[i] == str[j] && len == 2) {
                dp[i][j] = 2;
            } else if (str[i] == str[j]) {
                dp[i][j] = dp[i + 1][j - 1] + 2;
            } else {
                dp[i][j] = (dp[i][j - 1] > dp[i + 1][j]) ? dp[i][j - 1] : dp[i + 1][j];
            }
        }
    }
    
    return dp[0][n - 1];
}

int main() {
    char str[] = "abcbad";
    int length = longestPalindrome(str);
    printf("Length of the longest palindrome sequence: %d\n", length);
    
    return 0;
}
